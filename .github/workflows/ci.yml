name: CI/CD Pipeline

on:
  push:
    tags:
      - 'v*.*'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.13
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
    
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run Tests
      run: |
        python manage.py test matrix
      env:
        DJANGO_SETTINGS_MODULE: eisenhower_matrix.settings
        SECRET_KEY: 'test-key-for-ci'
        DEBUG: 'True'

  build-and-push:
    runs-on: ubuntu-latest
    needs: unit-tests
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract version from tag
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/v}
      if: startsWith(github.ref, 'refs/tags/')

    - name: Build and push image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: ${{ github.event_name != 'workflow_dispatch' }}
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          ${{ startsWith(github.ref, 'refs/tags/') && format('{0}/{1}:{2}', env.REGISTRY, env.IMAGE_NAME, steps.get_version.outputs.VERSION) || '' }}

    - name: Summary
      run: |
        echo "Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.get_version.outputs.VERSION || 'latest' }}"